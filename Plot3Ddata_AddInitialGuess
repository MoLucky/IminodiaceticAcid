# -*- coding: utf-8 -*-
"""
Created on Thu Sep  8 10:08:21 2016

@author: Fred
"""
with open("15BkIDA.csv", "r") as handle:
    data15 = [tuple(float(x) for x in line.split(",")) for line in handle]
with open("25BkIDA.csv", "r") as handle:
    data25 = [tuple(float(x) for x in line.split(",")) for line in handle]
with open("35BkIDA.csv", "r") as handle:
    data35 = [tuple(float(x) for x in line.split(",")) for line in handle]
with open("45BkIDA.csv", "r") as handle:
    data45 = [tuple(float(x) for x in line.split(",")) for line in handle]

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np

def getValueLists(data,H,L,D,dD,D0D,dD0D,dH,c):
    if len(data)==0:
        simple.scatter(L,H,D,color=c)
        simple.set_ylabel('[H+]')
        simple.set_xlabel('[L2-]')
        simple.set_zlabel('D')
        #plot errorbars
        for i in np.arange(0, len(D)):
            simple.plot([L[i], L[i]], [H[i], H[i]], [D[i]+dD[i], D[i]-dD[i]], marker="_",color=c)
            simple.plot([L[i], L[i]], [H[i]+dH[i], H[i]-dH[i]], [D[i], D[i]], marker="_",color=c)
    else:
        point=data.pop()
        H.append(point[0])
        L.append(point[1])
        D.append(point[2])
        dD.append(point[3])
        D0D.append(point[4])
        dD0D.append(point[5])
        dH.append(point[6])
        getValueLists(data,H,L,D,dD,D0D,dD0D,dH,c)


def FitPlotter(param,H,L):
    xH=np.linspace(min(H),max(H),3*len(H15))
    xL=np.linspace(min(L),max(L),3*len(L15))
    v=[xH*xL,xL,xL**2,xL**3]
    #xs = randrange(n, , 32)
    #ys = randrange(n, 0, 100)
    #X,Y = np.meshgrid(xH, xL)
    y=param[0]*v[0]+param[1]*v[3]
    comple.scatter(xH,xL,y)
    
#create vectors of raw data to plot
H15=[]
L15=[]
D0D15=[]
dD0D15=[]
H25=[]
L25=[]
D0D25=[]
dD0D25=[]
H35=[]
L35=[]
D0D35=[]
dD0D35=[]
H45=[]
L45=[]
D0D45=[]
dD0D45=[]

fig=plt.figure()
simple=fig.add_subplot(111,projection='3d')
#comple=fig.add_subplot(111,projection='3d')
getValueLists(data15,H15,L15,[],[],D0D15,dD0D15,[],'red')
getValueLists(data25,H25,L25,[],[],D0D25,dD0D25,[],'orange')
getValueLists(data35,H35,L35,[],[],D0D35,dD0D35,[],'yellow')
getValueLists(data45,H45,L45,[],[],D0D45,dD0D45,[],'green')
plt.show()

fig=plt.figure()
comple=fig.add_subplot(111,projection='3d')
FitPlotter([1.0*10**11,1.0*10**6])
comple.scatter(L15,H15,D0D15,color='red')
for i in np.arange(0, len(D0D15)):
    comple.plot([L15[i], L15[i]], [H15[i], H15[i]],[D0D15[i]+dD0D15[i], D0D15[i]-dD0D15[i]], marker="_",color='red')
comple.scatter(L25,H25,D0D25,color='orange')
for i in np.arange(0, len(D0D25)):
    comple.plot([L25[i], L25[i]], [H25[i], H25[i]],[D0D25[i]+dD0D25[i], D0D25[i]-dD0D25[i]], marker="_",color='orange')
comple.scatter(L35,H35,D0D35,color='yellow')
for i in np.arange(0, len(D0D35)):
    comple.plot([L35[i], L35[i]], [H35[i], H35[i]],[D0D35[i]+dD0D35[i], D0D35[i]-dD0D35[i]], marker="_",color='yellow')
comple.scatter(L45,H45,D0D45,color='green')
for i in np.arange(0, len(D0D45)):
    comple.plot([L45[i], L45[i]], [H45[i], H45[i]],[D0D45[i]+dD0D45[i], D0D45[i]-dD0D45[i]], marker="_",color='green')
comple.set_ylabel('[H+]')
comple.set_xlabel('[L2-]')
comple.set_zlabel('D0/D-1')
plt.show()
